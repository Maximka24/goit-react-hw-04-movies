{"version":3,"sources":["Component/GetApi.jsx","Component/views/MoviesItem/MoviesItem.module.css","Component/views/MoviesItem/MoviesItem.jsx"],"names":["KEY_API","MOVIES_Get_API","fetchApiMoviesRender","a","url","fetch","res","json","GetTrendingWeekMoviesApi","GetSearchMoviesApi","nameMovies","GetFullInformationMoviesApi","movieId","GetInformationActorMoviesApi","GetReviewMoviesApi","module","exports","CastsMovies","lazy","ReviewMovies","MoviesItem","history","useHistory","location","useLocation","useRouteMatch","moviesId","useParams","useState","setMoviesItem","useEffect","GetApi","then","movies","className","s","ContainerMoviesId","type","BtnBack","onClick","push","state","from","InformMovies","src","poster_path","alt","title","InformMoviesCard","popularity","overview","genres","map","movie","ElListGenres","name","id","AdditionalInfo","to","fallback","path"],"mappings":"gVAEMA,EAAU,mCACVC,EAAiB,+B,SAERC,I,2EAAf,0CAAAC,EAAA,6DAAoCC,EAApC,+BAA0C,GAA1C,SACoBC,MAAMD,GAD1B,cACQE,EADR,yBAESA,EAAIC,QAFb,4C,sBAMO,SAASC,IACd,OAAON,EAAqB,GAAD,OACtBD,EADsB,wCACwBD,IAK9C,SAASS,EAAmBC,GACjC,OAAOR,EAAqB,GAAD,OACtBD,EADsB,iCACiBD,EADjB,iCACiDU,EADjD,gCAMtB,SAASC,EAA4BC,GAC1C,OAAOV,EAAqB,GAAD,OACtBD,EADsB,kBACEW,EADF,oBACqBZ,EADrB,oBAMtB,SAASa,EAA6BD,GAC3C,OAAOV,EAAqB,GAAD,OACtBD,EADsB,kBACEW,EADF,4BAC6BZ,EAD7B,oBAMtB,SAASc,EAAmBF,GACjC,OAAOV,EAAqB,GAAD,OACtBD,EADsB,kBACEW,EADF,4BAC6BZ,EAD7B,6B,mBCvC7Be,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,aAAe,iCAAiC,QAAU,4BAA4B,iBAAmB,qCAAqC,aAAe,iCAAiC,eAAiB,qC,wJCiBrRC,EAAcC,gBAAK,kBAAM,gCACzBC,EAAeD,gBAAK,kBAAM,gCAEjB,SAASE,IACtB,IAAMC,EAAUC,cACVC,EAAWC,cACTpB,EAAQqB,cAARrB,IACAsB,EAAaC,cAAbD,SACR,EAAoCE,mBAAS,MAA7C,mBAAOR,EAAP,KAAmBS,EAAnB,KAEAC,qBAAU,WACRC,IAAmCL,GAAUM,MAAK,SAACC,GAAD,OAChDJ,EAAcI,QAEf,CAACP,IAMJ,OACE,mCACGN,GACC,qCACE,sBAAKc,UAAWC,IAAEC,kBAAlB,UACE,yBAAQC,KAAK,SAASH,UAAWC,IAAEG,QAASC,QATrC,WAAO,IAAD,IACrBlB,EAAQmB,KAAR,iBAAajB,QAAb,IAAaA,GAAb,UAAaA,EAAUkB,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAQ9B,UACE,cAAC,IAAD,IADF,cAKA,sBAAKR,UAAWC,IAAEQ,aAAlB,UACE,qBACEC,IAAG,0CAAqCxB,EAAWyB,aACnDC,IAAK1B,EAAW2B,QAElB,sBAAKb,UAAWC,IAAEa,iBAAlB,UACE,6BAAK5B,EAAW2B,QAChB,6CAAgB3B,EAAW6B,WAA3B,OACA,0CACA,4BAAI7B,EAAW8B,WACf,wCACA,6BACG9B,EAAW+B,OAAOC,KAAI,SAACC,GAAD,OACrB,oBAAInB,UAAWC,IAAEmB,aAAjB,SACGD,EAAME,MAD2BF,EAAMG,kBASpD,sBAAKtB,UAAWC,IAAEsB,eAAlB,UACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAASC,GAAE,UAAKtD,EAAL,SAAX,oBAEF,6BACE,cAAC,IAAD,CAASsD,GAAE,UAAKtD,EAAL,YAAX,6BAKN,eAAC,WAAD,CAAUuD,SAAU,4CAApB,UACE,cAAC,IAAD,CAAOC,KAAI,UAAKxD,EAAL,SAAX,SACE,cAACa,EAAD,CAAaS,SAAUA,MAGzB,cAAC,IAAD,CAAOkC,KAAI,UAAKxD,EAAL,YAAX,SACE,cAACe,EAAD,CAAcO,SAAUA","file":"static/js/5.04009b5e.chunk.js","sourcesContent":["// import axios from \"axios\";\n\nconst KEY_API = \"c46413d5ada5c46eaf911e4d51704b61\";\nconst MOVIES_Get_API = \"https://api.themoviedb.org/3\";\n\nasync function fetchApiMoviesRender(url = \"\") {\n  const res = await fetch(url);\n  return res.json();\n}\n\n// Запрос фильмов популярных за неделю\nexport function GetTrendingWeekMoviesApi() {\n  return fetchApiMoviesRender(\n    `${MOVIES_Get_API}/trending/movie/week?api_key=${KEY_API}`\n  );\n}\n\n// Запрос фильмов по названию\nexport function GetSearchMoviesApi(nameMovies) {\n  return fetchApiMoviesRender(\n    `${MOVIES_Get_API}/search/movie?api_key=${KEY_API}&language=en-US&query=${nameMovies}&page=1&include_adult=false`\n  );\n}\n\n// Запрос информации фильма по его id\nexport function GetFullInformationMoviesApi(movieId) {\n  return fetchApiMoviesRender(\n    `${MOVIES_Get_API}/movie/${movieId}?api_key=${KEY_API}&language=en-US`\n  );\n}\n\n// Запрос инф. о актерском составе\nexport function GetInformationActorMoviesApi(movieId) {\n  return fetchApiMoviesRender(\n    `${MOVIES_Get_API}/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`\n  );\n}\n\n// запрос обзоров о фильме\nexport function GetReviewMoviesApi(movieId) {\n  return fetchApiMoviesRender(\n    `${MOVIES_Get_API}/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerMoviesId\":\"MoviesItem_ContainerMoviesId__NVicu\",\"InformMovies\":\"MoviesItem_InformMovies__2_8wI\",\"BtnBack\":\"MoviesItem_BtnBack__1Hf_6\",\"InformMoviesCard\":\"MoviesItem_InformMoviesCard__3rZbM\",\"ElListGenres\":\"MoviesItem_ElListGenres__3AOOc\",\"AdditionalInfo\":\"MoviesItem_AdditionalInfo__1gCn7\"};","import { useEffect, useState, lazy, Suspense } from \"react\";\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  Route,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { BiArrowBack } from \"react-icons/bi\";\n\nimport * as GetApi from \"../../GetApi\";\nimport s from \"./MoviesItem.module.css\";\n\n// import CastsMovies from \"../CastsMovies/CastsMovies\";\n// import ReviewMovies from \"../ReviewMovies/ReviewMovies\";\n\nconst CastsMovies = lazy(() => import(\"../CastsMovies/CastsMovies\"));\nconst ReviewMovies = lazy(() => import(\"../ReviewMovies/ReviewMovies\"));\n\nexport default function MoviesItem() {\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  const { moviesId } = useParams();\n  const [MoviesItem, setMoviesItem] = useState(null);\n\n  useEffect(() => {\n    GetApi.GetFullInformationMoviesApi(moviesId).then((movies) =>\n      setMoviesItem(movies)\n    );\n  }, [moviesId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? \"/\");\n  };\n\n  return (\n    <>\n      {MoviesItem && (\n        <>\n          <div className={s.ContainerMoviesId}>\n            <button type=\"button\" className={s.BtnBack} onClick={onGoBack}>\n              <BiArrowBack />\n              Go back!\n            </button>\n\n            <div className={s.InformMovies}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${MoviesItem.poster_path}`}\n                alt={MoviesItem.title}\n              />\n              <div className={s.InformMoviesCard}>\n                <h2>{MoviesItem.title}</h2>\n                <p>Popularity: {MoviesItem.popularity}%</p>\n                <h3>Overview</h3>\n                <p>{MoviesItem.overview}</p>\n                <h3>Genres</h3>\n                <ul>\n                  {MoviesItem.genres.map((movie) => (\n                    <li className={s.ElListGenres} key={movie.id}>\n                      {movie.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className={s.AdditionalInfo}>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink to={`${url}/cast`}>Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to={`${url}/reviews`}>Reviews</NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<h1>Loading...</h1>}>\n            <Route path={`${url}/cast`}>\n              <CastsMovies moviesId={moviesId} />\n            </Route>\n\n            <Route path={`${url}/reviews`}>\n              <ReviewMovies moviesId={moviesId} />\n            </Route>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}